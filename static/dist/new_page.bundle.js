!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var r=function(){function e(){this.last_position=window.scrollY,this.time_to_update_toc=!0,this.scroll_down_event_handlers=[],this.scroll_up_event_handlers=[],this.InstallScrollEventHandler()}return e.prototype.InstallScrollEventHandler=function(){var e=this;window.addEventListener("scroll",(function(t){e.time_to_update_toc&&(window.requestAnimationFrame((function(){if(e.time_to_update_toc=!0,e.last_position>window.scrollY)for(var t=0,n=e.scroll_up_event_handlers;t<n.length;t++){(0,n[t])()}else for(var r=0,o=e.scroll_down_event_handlers;r<o.length;r++){(0,o[r])()}e.last_position=window.scrollY})),e.time_to_update_toc=!1)}))},e.prototype.RegisterScrollUpHandler=function(e){this.scroll_up_event_handlers.push(e)},e.prototype.RegisterScrollDownHandler=function(e){this.scroll_down_event_handlers.push(e)},e}();function o(e){for(var t=0;t<e.length&&"Â "==e[t];t++);return e.substring(t)}var i=function(){function e(){this.toc_headers_=[],this.time_to_update_toc=!0,this.prev_highlighted=0,this.FetchHeaders()}return e.prototype.FetchHeaders=function(){for(var e,t=0,n=document.querySelectorAll(".header-general");t<n.length;t++){var r=n[t],i=o(r.innerText),l="h"!=(e=r.tagName)[0]&&"H"!=e[0]?-1:parseInt(e.substring(1)),a=r.id,s=r.getBoundingClientRect().top+window.scrollY;this.toc_headers_.push({header_name:i,header_tag:l,header_id:a,header_pos:s,header_elem_link:null})}},e.prototype.RecursiveTOCCreator=function(e,t,n){for(var r=null,o=t;o<this.toc_headers_.length;o++){var i=this.toc_headers_[o];if(i.header_tag<n)return o;if(i.header_tag>n){var a=document.createElement("ol");a.className="toc-list",r.appendChild(a),o=this.RecursiveTOCCreator(a,o,i.header_tag),o--}else{var s=l(i);i.header_elem_link=s.firstChild,e.appendChild(s),r=s}}return o},e.prototype.CreateTOCList=function(){var e=document.querySelector(".toc-list");null!=e&&(this.RecursiveTOCCreator(e,0,this.toc_headers_[0].header_tag),this.InstallTOCEventHandlers())},e.prototype.InstallTOCEventHandlers=function(){var e=this;window.addEventListener("scroll",(function(t){var n=window.scrollY;e.time_to_update_toc&&(window.requestAnimationFrame((function(){e.time_to_update_toc=!0;var t=e.GetCurrentActiveTOCItem(n);e.HighlightActiveItem(t)})),e.time_to_update_toc=!1)}))},e.prototype.HighlightActiveItem=function(e){this.toc_headers_[this.prev_highlighted].header_elem_link.className="toc-item-link",this.toc_headers_[e].header_elem_link.className="toc-item-link toc-active-item",this.prev_highlighted=e},e.prototype.InstallLinkClickHandler=function(){for(var e=function(e){e.header_elem_link.onclick=function(t){window.scrollTo(0,e.header_pos-150),console.log(e.header_pos-150)}},t=0,n=this.toc_headers_;t<n.length;t++){e(n[t])}},e.prototype.GetCurrentActiveTOCItem=function(e){if(e<this.toc_headers_[0].header_pos)return 0;for(var t,n,r=0;r<this.toc_headers_.length&&r!=this.toc_headers_.length-1;r++)if(this.toc_headers_[r].header_pos<=e&&e<this.toc_headers_[r+1].header_pos)return e-this.toc_headers_[r].header_pos>this.toc_headers_[r+1].header_pos-e&&(t=this.toc_headers_[r+1].header_elem_link,n=void 0,(n=t.getBoundingClientRect()).top>=0&&n.left>=0&&n.right<=(window.innerWidth||document.documentElement.clientWidth)&&n.bottom<=(window.innerHeight||document.documentElement.clientHeight))?r+1:r;return r},e}();function l(e){var t=document.createElement("li");t.className="toc-list-item";var n=document.createElement("span");return n.className="toc-item-link",n.textContent=e.header_name,t.appendChild(n),t}function a(){var e;(e=new i).CreateTOCList(),e.InstallLinkClickHandler(),(new r).RegisterScrollUpHandler((function(){}))}window.onload=function(){a()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,