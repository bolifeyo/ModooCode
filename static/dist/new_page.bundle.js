!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var r=function(){function e(){this.last_position=window.scrollY,this.time_to_update_toc=!0,this.scroll_down_event_handlers=[],this.scroll_up_event_handlers=[],this.InstallScrollEventHandler()}return e.prototype.InstallScrollEventHandler=function(){var e=this;window.addEventListener("scroll",function(t){e.time_to_update_toc&&(window.requestAnimationFrame(function(){if(e.time_to_update_toc=!0,e.last_position>window.scrollY)for(var t=0,n=e.scroll_up_event_handlers;t<n.length;t++){(0,n[t])()}else for(var r=0,o=e.scroll_down_event_handlers;r<o.length;r++){(0,o[r])()}e.last_position=window.scrollY}),e.time_to_update_toc=!1)})},e.prototype.RegisterScrollUpHandler=function(e){this.scroll_up_event_handlers.push(e)},e.prototype.RegisterScrollDownHandler=function(e){this.scroll_down_event_handlers.push(e)},e}();function o(e){for(var t=0;t<e.length&&"Â "==e[t];t++);return e.substring(t)}var i=function(){function e(){this.toc_headers_=[],this.time_to_update_toc=!0,this.prev_highlighted=0,this.FetchHeaders()}return e.prototype.FetchHeaders=function(){for(var e,t=0,n=document.querySelectorAll(".header-general");t<n.length;t++){var r=n[t],i=o(r.innerText),l="h"!=(e=r.tagName)[0]&&"H"!=e[0]?-1:parseInt(e.substring(1)),a=r.id,s=r.getBoundingClientRect().top+window.scrollY;this.toc_headers_.push({header_name:i,header_tag:l,header_id:a,header_pos:s,header_elem_link:null})}},e.prototype.RecursiveTOCCreator=function(e,t,n){for(var r=null,o=t;o<this.toc_headers_.length;o++){var i=this.toc_headers_[o];if(i.header_tag<n)return o;if(i.header_tag>n){var a=document.createElement("ol");a.className="toc-list",r.appendChild(a),o=this.RecursiveTOCCreator(a,o,i.header_tag),o--}else{var s=l(i);i.header_elem_link=s.firstChild,e.appendChild(s),r=s}}return o},e.prototype.CreateTOCList=function(){var e=document.querySelector(".toc-list");null!=e&&(this.RecursiveTOCCreator(e,0,this.toc_headers_[0].header_tag),this.InstallTOCEventHandlers())},e.prototype.InstallTOCEventHandlers=function(){var e=this;window.addEventListener("scroll",function(t){var n=window.scrollY;e.time_to_update_toc&&(window.requestAnimationFrame(function(){e.time_to_update_toc=!0;var t=e.GetCurrentActiveTOCItem(n);e.HighlightActiveItem(t)}),e.time_to_update_toc=!1)})},e.prototype.HighlightActiveItem=function(e){this.toc_headers_[this.prev_highlighted].header_elem_link.className="toc-item-link",this.toc_headers_[e].header_elem_link.className="toc-item-link toc-active-item",this.prev_highlighted=e},e.prototype.InstallLinkClickHandler=function(){for(var e=function(e){e.header_elem_link.onclick=function(t){window.scrollTo(0,e.header_pos-150),console.log(e.header_pos-150)}},t=0,n=this.toc_headers_;t<n.length;t++){e(n[t])}},e.prototype.GetCurrentActiveTOCItem=function(e){if(e<this.toc_headers_[0].header_pos)return 0;for(var t,n,r=0;r<this.toc_headers_.length&&r!=this.toc_headers_.length-1;r++)if(this.toc_headers_[r].header_pos<=e&&e<this.toc_headers_[r+1].header_pos)return e-this.toc_headers_[r].header_pos>this.toc_headers_[r+1].header_pos-e&&(t=this.toc_headers_[r+1].header_elem_link,n=void 0,(n=t.getBoundingClientRect()).top>=0&&n.left>=0&&n.right<=(window.innerWidth||document.documentElement.clientWidth)&&n.bottom<=(window.innerHeight||document.documentElement.clientHeight))?r+1:r;return r},e}();function l(e){var t=document.createElement("li");t.className="toc-list-item";var n=document.createElement("span");return n.className="toc-item-link",n.textContent=e.header_name,t.appendChild(n),t}function a(){var e;(e=new i).CreateTOCList(),e.InstallLinkClickHandler(),(new r).RegisterScrollUpHandler(function(){})}window.onload=function(){a()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL3Njcm9sbC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdXRpbC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdG9jLnRzIiwid2VicGFjazovLy8uL3NyYy9pbmRleC50cyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsIlNjcm9sbCIsInRoaXMiLCJsYXN0X3Bvc2l0aW9uIiwid2luZG93Iiwic2Nyb2xsWSIsInRpbWVfdG9fdXBkYXRlX3RvYyIsInNjcm9sbF9kb3duX2V2ZW50X2hhbmRsZXJzIiwic2Nyb2xsX3VwX2V2ZW50X2hhbmRsZXJzIiwiSW5zdGFsbFNjcm9sbEV2ZW50SGFuZGxlciIsIl90aGlzIiwiYWRkRXZlbnRMaXN0ZW5lciIsImUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJfaSIsIl9hIiwibGVuZ3RoIiwiZnVuYyIsIl9iIiwiX2MiLCJSZWdpc3RlclNjcm9sbFVwSGFuZGxlciIsInB1c2giLCJSZWdpc3RlclNjcm9sbERvd25IYW5kbGVyIiwiU3RyaXBQcmVmaXhOYnNwIiwic3RyIiwic3Vic3RyaW5nIiwidG9jX1RPQyIsIlRPQyIsInRvY19oZWFkZXJzXyIsInByZXZfaGlnaGxpZ2h0ZWQiLCJGZXRjaEhlYWRlcnMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJoZWFkZXIiLCJoZWFkZXJfbmFtZSIsImlubmVyVGV4dCIsImhlYWRlcl90YWciLCJ0YWdOYW1lIiwicGFyc2VJbnQiLCJoZWFkZXJfaWQiLCJpZCIsImhlYWRlcl9wb3MiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ0b3AiLCJoZWFkZXJfZWxlbV9saW5rIiwiUmVjdXJzaXZlVE9DQ3JlYXRvciIsInBhcmVudF9vbCIsImN1cnJlbnRfaGVhZGVyX251bSIsInRhZ19udW1iZXIiLCJjdXJyZW50X2xpIiwiY2hpbGRfcGFyZW50X29sIiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsIkJ1aWxkQ2F0ZWdvcnlMaXN0RWxlbWVudCIsImZpcnN0Q2hpbGQiLCJDcmVhdGVUT0NMaXN0Iiwicm9vdF9vbCIsInF1ZXJ5U2VsZWN0b3IiLCJJbnN0YWxsVE9DRXZlbnRIYW5kbGVycyIsInRoYXQiLCJsYXN0X2tub3duX3Njcm9sbF9wb3MiLCJoZWFkZXJfbnVtIiwiR2V0Q3VycmVudEFjdGl2ZVRPQ0l0ZW0iLCJIaWdobGlnaHRBY3RpdmVJdGVtIiwiaXRlbV9udW0iLCJJbnN0YWxsTGlua0NsaWNrSGFuZGxlciIsIm9uY2xpY2siLCJzY3JvbGxUbyIsImNvbnNvbGUiLCJsb2ciLCJzY3JvbGxfcG9zIiwiZWwiLCJib3VuZGluZyIsImxlZnQiLCJyaWdodCIsImlubmVyV2lkdGgiLCJkb2N1bWVudEVsZW1lbnQiLCJjbGllbnRXaWR0aCIsImJvdHRvbSIsImlubmVySGVpZ2h0IiwiY2xpZW50SGVpZ2h0IiwibGluayIsInRleHRDb250ZW50IiwiTWFpbiIsInRvYyIsIm9ubG9hZCJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsRUFBQSxHQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxPQUFBRixFQUFBRSxHQUFBQyxRQUdBLElBQUFDLEVBQUFKLEVBQUFFLEdBQUEsQ0FDQUcsRUFB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LEtBQUswQixhQUFhWixPQUFTLEVBREQvQyxJQUc1QixHQUNIaUMsS0FBSzBCLGFBQWEzRCxHQUFHd0UsWUFBYytCLEdBQ25DQSxFQUFhdEUsS0FBSzBCLGFBQWEzRCxFQUFJLEdBQUd3RSxXQUN4QyxPQUFJK0IsRUFBYXRFLEtBQUswQixhQUFhM0QsR0FBR3dFLFdBQzlCdkMsS0FBSzBCLGFBQWEzRCxFQUFJLEdBQUd3RSxXQUFhK0IsSUR6R2xCQyxFQzJHcEJ2RSxLQUFLMEIsYUFBYTNELEVBQUksR0FBRzJFLGlCRDFHbkM4QixZQUFXRCxFQUFHL0IseUJBQ0ZDLEtBQU8sR0FBSytCLEVBQVNDLE1BQVEsR0FDekNELEVBQVNFLFFBQ1J4RSxPQUFPeUUsWUFBYzlDLFNBQVMrQyxnQkFBZ0JDLGNBQy9DTCxFQUFTTSxTQUNSNUUsT0FBTzZFLGFBQWVsRCxTQUFTK0MsZ0JBQWdCSSxlQ3NHckNqSCxFQUFJLEVBRUpBLEVBSWIsT0FBT0EsR0FNWDBELEVBbElBLEdBb0lBLFNBQVM0QixFQUF5QnRCLEdBQ2hDLElBQUlxQixFQUFVdkIsU0FBU29CLGNBQWMsTUFDckNHLEVBQVFGLFVBQVksZ0JBRXBCLElBQUkrQixFQUFPcEQsU0FBU29CLGNBQWMsUUFLbEMsT0FKQWdDLEVBQUsvQixVQUFZLGdCQUNqQitCLEVBQUtDLFlBQWNuRCxFQUFPQyxZQUUxQm9CLEVBQVFELFlBQVk4QixHQUNiN0IsRUNuSlQsU0FBUytCLElEc0pGLElBQ0RDLEtBQU0sSUFBSTVELEdBQ1YrQixnQkFHSjZCLEVBQUluQiwyQkY3R1MsSUFBSWxFLEdHMUNWbUIsd0JBQXdCLGNBYWpDaEIsT0FBT21GLE9BQVMsV0FDZEYiLCJmaWxlIjoibmV3X3BhZ2UuYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDApO1xuIiwiY2xhc3MgU2Nyb2xsIHtcbiAgcHVibGljIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMubGFzdF9wb3NpdGlvbiA9IHdpbmRvdy5zY3JvbGxZO1xuICAgIHRoaXMudGltZV90b191cGRhdGVfdG9jID0gdHJ1ZTtcblxuICAgIHRoaXMuc2Nyb2xsX2Rvd25fZXZlbnRfaGFuZGxlcnMgPSBbXTtcbiAgICB0aGlzLnNjcm9sbF91cF9ldmVudF9oYW5kbGVycyA9IFtdO1xuXG4gICAgdGhpcy5JbnN0YWxsU2Nyb2xsRXZlbnRIYW5kbGVyKCk7XG4gIH1cblxuICBwcml2YXRlIEluc3RhbGxTY3JvbGxFdmVudEhhbmRsZXIoKSB7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIChlKSA9PiB7XG4gICAgICBpZiAodGhpcy50aW1lX3RvX3VwZGF0ZV90b2MpIHtcbiAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB7XG4gICAgICAgICAgdGhpcy50aW1lX3RvX3VwZGF0ZV90b2MgPSB0cnVlO1xuICAgICAgICAgIGlmICh0aGlzLmxhc3RfcG9zaXRpb24gPiB3aW5kb3cuc2Nyb2xsWSkge1xuICAgICAgICAgICAgZm9yIChsZXQgZnVuYyBvZiB0aGlzLnNjcm9sbF91cF9ldmVudF9oYW5kbGVycykge1xuICAgICAgICAgICAgICBmdW5jKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZvciAobGV0IGZ1bmMgb2YgdGhpcy5zY3JvbGxfZG93bl9ldmVudF9oYW5kbGVycykge1xuICAgICAgICAgICAgICBmdW5jKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIHRoaXMubGFzdF9wb3NpdGlvbiA9IHdpbmRvdy5zY3JvbGxZO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy50aW1lX3RvX3VwZGF0ZV90b2MgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBSZWdpc3RlclNjcm9sbFVwSGFuZGxlcihmdW5jOiAoKT0+dm9pZCkge1xuICAgIHRoaXMuc2Nyb2xsX3VwX2V2ZW50X2hhbmRsZXJzLnB1c2goZnVuYyk7ICAgICAgXG4gIH1cblxuICBwdWJsaWMgUmVnaXN0ZXJTY3JvbGxEb3duSGFuZGxlcihmdW5jOiAoKT0+dm9pZCkge1xuICAgIHRoaXMuc2Nyb2xsX2Rvd25fZXZlbnRfaGFuZGxlcnMucHVzaChmdW5jKTsgICAgICBcbiAgfVxuXG4gIHByaXZhdGUgbGFzdF9wb3NpdGlvbjogbnVtYmVyO1xuXG4gIC8vIE1ha2Ugc3VyZSBub3QgdG8gaGFuZGxlIHNjcm9sbCBldmVudCB0b28gb2Z0ZW4uXG4gIHByaXZhdGUgdGltZV90b191cGRhdGVfdG9jOiBib29sZWFuO1xuXG4gIHByaXZhdGUgc2Nyb2xsX2Rvd25fZXZlbnRfaGFuZGxlcnM6ICgoKT0+IHZvaWQpW107XG4gIHByaXZhdGUgc2Nyb2xsX3VwX2V2ZW50X2hhbmRsZXJzOiAoKCk9PiB2b2lkKVtdO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQ3JlYXRlU2Nyb2xsSGFuZGxlcigpIDogU2Nyb2xsIHtcbiAgbGV0IHNjcm9sbCA9IG5ldyBTY3JvbGwoKTtcbiAgcmV0dXJuIHNjcm9sbDtcbn0iLCJleHBvcnQgZnVuY3Rpb24gU3RyaXBQcmVmaXhOYnNwKHN0cjogc3RyaW5nKTogc3RyaW5nIHtcbiAgbGV0IGkgPSAwO1xuICBmb3IgKDsgaSA8IHN0ci5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHJbaV0gPT0gJ8KgJykgeyAgLy8gVGhpcyBpcyBub3Qgc3BhY2UuIFRoaXMgaXMgdW5pY29kZSBOQlNQIChVKzAwQTApXG4gICAgICBjb250aW51ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG4gIHJldHVybiBzdHIuc3Vic3RyaW5nKGkpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gR2V0SGVhZGVyTnVtKHN0cjogc3RyaW5nKTogbnVtYmVyIHtcbiAgaWYgKCEoc3RyWzBdID09ICdoJyB8fCBzdHJbMF0gPT0gJ0gnKSkge1xuICAgIHJldHVybiAtMTtcbiAgfVxuXG4gIHJldHVybiBwYXJzZUludChzdHIuc3Vic3RyaW5nKDEpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIElzRWxlbWVudEluVmlld1BvcnQoZWw6IEhUTUxFbGVtZW50KTogYm9vbGVhbiB7XG4gIGxldCBib3VuZGluZyA9IGVsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICByZXR1cm4gYm91bmRpbmcudG9wID49IDAgJiYgYm91bmRpbmcubGVmdCA+PSAwICYmXG4gICAgICBib3VuZGluZy5yaWdodCA8PVxuICAgICAgKHdpbmRvdy5pbm5lcldpZHRoIHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCkgJiZcbiAgICAgIGJvdW5kaW5nLmJvdHRvbSA8PVxuICAgICAgKHdpbmRvdy5pbm5lckhlaWdodCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0KTtcbn0iLCJpbXBvcnQgKiBhcyBVdGlsIGZyb20gJy4vdXRpbCc7XG5cbmludGVyZmFjZSBUT0NIZWFkZXIge1xuICBoZWFkZXJfbmFtZTogc3RyaW5nO1xuICBoZWFkZXJfdGFnOiBudW1iZXI7XG4gIGhlYWRlcl9pZDogc3RyaW5nO1xuICBoZWFkZXJfcG9zOiBudW1iZXI7XG4gIGhlYWRlcl9lbGVtX2xpbms6IEhUTUxBbmNob3JFbGVtZW50O1xufVxuXG5jbGFzcyBUT0Mge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLnRvY19oZWFkZXJzXyA9IFtdO1xuICAgIHRoaXMudGltZV90b191cGRhdGVfdG9jID0gdHJ1ZTtcbiAgICB0aGlzLnByZXZfaGlnaGxpZ2h0ZWQgPSAwO1xuXG4gICAgLy8gRmV0Y2ggVE9DIEhlYWRlcnMuXG4gICAgdGhpcy5GZXRjaEhlYWRlcnMoKTtcbiAgfVxuXG4gIHByaXZhdGUgRmV0Y2hIZWFkZXJzKCkge1xuICAgIC8vIEZpcnN0IGlkZW50aWZ5IGFsbCB0aGUgaGVhZGVycy5cbiAgICBsZXQgaGVhZGVyczogTm9kZUxpc3RPZjxFbGVtZW50PiA9XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5oZWFkZXItZ2VuZXJhbCcpO1xuXG4gICAgZm9yIChsZXQgaGVhZGVyIG9mIGhlYWRlcnMgYXMgYW55KSB7XG4gICAgICBsZXQgaGVhZGVyX25hbWU6IHN0cmluZyA9IFV0aWwuU3RyaXBQcmVmaXhOYnNwKGhlYWRlci5pbm5lclRleHQpO1xuICAgICAgbGV0IGhlYWRlcl90YWc6IG51bWJlciA9IFV0aWwuR2V0SGVhZGVyTnVtKGhlYWRlci50YWdOYW1lKTtcbiAgICAgIGxldCBoZWFkZXJfaWQ6IHN0cmluZyA9IGhlYWRlci5pZDtcbiAgICAgIGxldCBoZWFkZXJfcG9zOiBudW1iZXIgPVxuICAgICAgICAgIGhlYWRlci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3AgKyB3aW5kb3cuc2Nyb2xsWTtcbiAgICAgIHRoaXMudG9jX2hlYWRlcnNfLnB1c2goe1xuICAgICAgICBoZWFkZXJfbmFtZSxcbiAgICAgICAgaGVhZGVyX3RhZyxcbiAgICAgICAgaGVhZGVyX2lkLFxuICAgICAgICBoZWFkZXJfcG9zLFxuICAgICAgICBoZWFkZXJfZWxlbV9saW5rOiBudWxsXG4gICAgICB9KTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIFJlY3Vyc2l2ZVRPQ0NyZWF0b3IoXG4gICAgICBwYXJlbnRfb2w6IEhUTUxPTGlzdEVsZW1lbnQsIGN1cnJlbnRfaGVhZGVyX251bTogbnVtYmVyLFxuICAgICAgdGFnX251bWJlcjogbnVtYmVyKSB7XG4gICAgbGV0IGN1cnJlbnRfbGkgPSBudWxsO1xuICAgIGxldCBpID0gY3VycmVudF9oZWFkZXJfbnVtO1xuICAgIGZvciAoOyBpIDwgdGhpcy50b2NfaGVhZGVyc18ubGVuZ3RoOyBpKyspIHtcbiAgICAgIGxldCBoZWFkZXIgPSB0aGlzLnRvY19oZWFkZXJzX1tpXTtcblxuICAgICAgLy8gaDMgLT4gaDJcbiAgICAgIGlmIChoZWFkZXIuaGVhZGVyX3RhZyA8IHRhZ19udW1iZXIpIHtcbiAgICAgICAgcmV0dXJuIGk7XG4gICAgICB9XG4gICAgICAvLyBoMiAtPiBoM1xuICAgICAgZWxzZSBpZiAoaGVhZGVyLmhlYWRlcl90YWcgPiB0YWdfbnVtYmVyKSB7XG4gICAgICAgIGxldCBjaGlsZF9wYXJlbnRfb2wgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvbCcpIGFzIEhUTUxPTGlzdEVsZW1lbnQ7XG4gICAgICAgIGNoaWxkX3BhcmVudF9vbC5jbGFzc05hbWUgPSAndG9jLWxpc3QnO1xuICAgICAgICBjdXJyZW50X2xpLmFwcGVuZENoaWxkKGNoaWxkX3BhcmVudF9vbCk7XG4gICAgICAgIGkgPSB0aGlzLlJlY3Vyc2l2ZVRPQ0NyZWF0b3IoY2hpbGRfcGFyZW50X29sLCBpLCBoZWFkZXIuaGVhZGVyX3RhZyk7XG4gICAgICAgIGktLTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCBlbGVtZW50ID0gQnVpbGRDYXRlZ29yeUxpc3RFbGVtZW50KGhlYWRlcik7XG4gICAgICAgIGhlYWRlci5oZWFkZXJfZWxlbV9saW5rID0gZWxlbWVudC5maXJzdENoaWxkIGFzIEhUTUxBbmNob3JFbGVtZW50O1xuICAgICAgICBwYXJlbnRfb2wuYXBwZW5kQ2hpbGQoZWxlbWVudCk7XG4gICAgICAgIGN1cnJlbnRfbGkgPSBlbGVtZW50O1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaTtcbiAgfVxuXG4gIHB1YmxpYyBDcmVhdGVUT0NMaXN0KCkge1xuICAgIGxldCByb290X29sID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnRvYy1saXN0JykgYXMgSFRNTE9MaXN0RWxlbWVudDtcbiAgICBpZiAocm9vdF9vbCA9PSBudWxsKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIHRoaXMuUmVjdXJzaXZlVE9DQ3JlYXRvcihyb290X29sLCAwLCB0aGlzLnRvY19oZWFkZXJzX1swXS5oZWFkZXJfdGFnKTtcblxuICAgIHRoaXMuSW5zdGFsbFRPQ0V2ZW50SGFuZGxlcnMoKTtcbiAgfVxuXG4gIHByaXZhdGUgSW5zdGFsbFRPQ0V2ZW50SGFuZGxlcnMoKSB7XG4gICAgbGV0IHRoYXQgPSB0aGlzO1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBmdW5jdGlvbihlKSB7XG4gICAgICBsZXQgbGFzdF9rbm93bl9zY3JvbGxfcG9zID0gd2luZG93LnNjcm9sbFk7XG4gICAgICBpZiAodGhhdC50aW1lX3RvX3VwZGF0ZV90b2MpIHtcbiAgICAgICAgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZShmdW5jdGlvbigpIHtcbiAgICAgICAgICB0aGF0LnRpbWVfdG9fdXBkYXRlX3RvYyA9IHRydWU7XG4gICAgICAgICAgbGV0IGhlYWRlcl9udW0gPSB0aGF0LkdldEN1cnJlbnRBY3RpdmVUT0NJdGVtKGxhc3Rfa25vd25fc2Nyb2xsX3Bvcyk7XG4gICAgICAgICAgdGhhdC5IaWdobGlnaHRBY3RpdmVJdGVtKGhlYWRlcl9udW0pO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhhdC50aW1lX3RvX3VwZGF0ZV90b2MgPSBmYWxzZTtcbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgcHJpdmF0ZSBIaWdobGlnaHRBY3RpdmVJdGVtKGl0ZW1fbnVtOiBudW1iZXIpIHtcbiAgICB0aGlzLnRvY19oZWFkZXJzX1t0aGlzLnByZXZfaGlnaGxpZ2h0ZWRdLmhlYWRlcl9lbGVtX2xpbmsuY2xhc3NOYW1lID1cbiAgICAgICAgJ3RvYy1pdGVtLWxpbmsnO1xuICAgIHRoaXMudG9jX2hlYWRlcnNfW2l0ZW1fbnVtXS5oZWFkZXJfZWxlbV9saW5rLmNsYXNzTmFtZSA9XG4gICAgICAgICd0b2MtaXRlbS1saW5rIHRvYy1hY3RpdmUtaXRlbSc7XG4gICAgdGhpcy5wcmV2X2hpZ2hsaWdodGVkID0gaXRlbV9udW07XG4gIH1cblxuICBwdWJsaWMgSW5zdGFsbExpbmtDbGlja0hhbmRsZXIoKSB7XG4gICAgZm9yIChsZXQgaGVhZGVyIG9mIHRoaXMudG9jX2hlYWRlcnNfKSB7XG4gICAgICBoZWFkZXIuaGVhZGVyX2VsZW1fbGluay5vbmNsaWNrID0gKGU6IE1vdXNlRXZlbnQpID0+IHtcbiAgICAgICAgd2luZG93LnNjcm9sbFRvKDAsIGhlYWRlci5oZWFkZXJfcG9zIC0gMTUwKTtcbiAgICAgICAgY29uc29sZS5sb2coaGVhZGVyLmhlYWRlcl9wb3MgLSAxNTApO1xuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIEdldEN1cnJlbnRBY3RpdmVUT0NJdGVtKHNjcm9sbF9wb3M6IG51bWJlcikge1xuICAgIGlmIChzY3JvbGxfcG9zIDwgdGhpcy50b2NfaGVhZGVyc19bMF0uaGVhZGVyX3Bvcykge1xuICAgICAgcmV0dXJuIDA7XG4gICAgfVxuXG4gICAgbGV0IGkgPSAwO1xuICAgIGZvciAoOyBpIDwgdGhpcy50b2NfaGVhZGVyc18ubGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmIChpID09IHRoaXMudG9jX2hlYWRlcnNfLmxlbmd0aCAtIDEpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9IGVsc2UgaWYgKFxuICAgICAgICAgIHRoaXMudG9jX2hlYWRlcnNfW2ldLmhlYWRlcl9wb3MgPD0gc2Nyb2xsX3BvcyAmJlxuICAgICAgICAgIHNjcm9sbF9wb3MgPCB0aGlzLnRvY19oZWFkZXJzX1tpICsgMV0uaGVhZGVyX3Bvcykge1xuICAgICAgICBpZiAoc2Nyb2xsX3BvcyAtIHRoaXMudG9jX2hlYWRlcnNfW2ldLmhlYWRlcl9wb3MgPlxuICAgICAgICAgICAgICAgIHRoaXMudG9jX2hlYWRlcnNfW2kgKyAxXS5oZWFkZXJfcG9zIC0gc2Nyb2xsX3BvcyAmJlxuICAgICAgICAgICAgVXRpbC5Jc0VsZW1lbnRJblZpZXdQb3J0KFxuICAgICAgICAgICAgICAgIHRoaXMudG9jX2hlYWRlcnNfW2kgKyAxXS5oZWFkZXJfZWxlbV9saW5rKSkge1xuICAgICAgICAgIHJldHVybiBpICsgMTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gaTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaTtcbiAgfVxuXG4gIHByaXZhdGUgdG9jX2hlYWRlcnNfOiBUT0NIZWFkZXJbXTtcbiAgcHJpdmF0ZSB0aW1lX3RvX3VwZGF0ZV90b2M6IGJvb2xlYW47XG4gIHByaXZhdGUgcHJldl9oaWdobGlnaHRlZDogbnVtYmVyO1xufVxuXG5mdW5jdGlvbiBCdWlsZENhdGVnb3J5TGlzdEVsZW1lbnQoaGVhZGVyOiBUT0NIZWFkZXIpOiBIVE1MTElFbGVtZW50IHtcbiAgbGV0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpIGFzIEhUTUxMSUVsZW1lbnQ7XG4gIGVsZW1lbnQuY2xhc3NOYW1lID0gJ3RvYy1saXN0LWl0ZW0nO1xuXG4gIGxldCBsaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpIGFzIEhUTUxTcGFuRWxlbWVudDtcbiAgbGluay5jbGFzc05hbWUgPSAndG9jLWl0ZW0tbGluaydcbiAgbGluay50ZXh0Q29udGVudCA9IGhlYWRlci5oZWFkZXJfbmFtZTtcblxuICBlbGVtZW50LmFwcGVuZENoaWxkKGxpbmspO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEJ1aWxkVGFibGVPZkNvbnRlbnRzKCk6IFRPQyB7XG4gIGxldCB0b2MgPSBuZXcgVE9DKCk7XG4gIHRvYy5DcmVhdGVUT0NMaXN0KCk7XG5cbiAgLy8gSW5zdGFsbCBjbGljayBoYW5kbGVycy5cbiAgdG9jLkluc3RhbGxMaW5rQ2xpY2tIYW5kbGVyKCk7XG4gIHJldHVybiB0b2M7XG59IiwiaW1wb3J0ICogYXMgU2Nyb2xsIGZyb20gJy4vc2Nyb2xsJztcbmltcG9ydCAqIGFzIFRPQyBmcm9tICcuL3RvYyc7XG5cbi8vIE1haW4gZW50cnkgcG9pbnQuXG5mdW5jdGlvbiBNYWluKCkge1xuICBUT0MuQnVpbGRUYWJsZU9mQ29udGVudHMoKTtcblxuICBsZXQgc2Nyb2xsID0gU2Nyb2xsLkNyZWF0ZVNjcm9sbEhhbmRsZXIoKTtcbiAgc2Nyb2xsLlJlZ2lzdGVyU2Nyb2xsVXBIYW5kbGVyKCgpID0+IHtcbiAgICAvKlxuICAgIGNvbnNvbGUubG9nKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCI6dGFyZ2V0XCIpKTtcbiAgICBsZXQgcGFkZGVkX2hlYWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCI6dGFyZ2V0XCIpIGFzIEhUTUxBbmNob3JFbGVtZW50O1xuICAgIGlmIChwYWRkZWRfaGVhZGVyLnN0eWxlLnBhZGRpbmdUb3AgIT0gXCIwXCIpIHtcbiAgICAgIHBhZGRlZF9oZWFkZXIuc3R5bGUucGFkZGluZ1RvcCA9IFwiMFwiO1xuICAgIH1cblxuICAgIC8vIFJlbW92ZSAjIGZyb20gdXJsLlxuICAgIGhpc3RvcnkucmVwbGFjZVN0YXRlKG51bGwsIG51bGwsICcgJyk7Ki9cbiAgfSlcbn1cblxud2luZG93Lm9ubG9hZCA9ICgpID0+IHtcbiAgTWFpbigpO1xufSJdLCJzb3VyY2VSb290IjoiIn0=